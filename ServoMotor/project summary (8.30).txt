# 프로젝트 진행 상황 요약 (8.30)

## 최종 목표
- 웹캠을 사용하여 플라스틱, 종이, 금속, 유리 등의 재활용품을 실시간으로 탐지합니다.
- 탐지된 객체의 종류에 따라 서보 모터를 특정 각도로 움직여 분류 작업을 자동화합니다.

## 진행된 내용
1. YOLOv5 모델 통합: YOLOv5 객체 탐지 코드를 프로젝트에 맞게 수정하여 recycling_detector.py에 통합했습니다. 이 코드는 웹캠 영상에서 객체를 탐지하고, 가장 신뢰도 높은 결과를 'plastic', 'paper' 등의 카테고리로 분류하여 반환합니다.
2. 메인 컨트롤러 작성: main_controller.py 파일을 작성하여 전체 시스템의 동작을 제어하도록 했습니다. 이 파일은 recycling_detector로부터 탐지 결과를 받아 Motor를 제어하는 역할을 합니다.
3. 모터 제어 시뮬레이션: 실제 모터 구동 코드를 대신하여, 지정된 각도로 모터가 움직이는 상황을 가정하고 콘솔에 메시지를 출력하는 Motor.py를 작성했습니다.
4. 가상 환경 설정: 시스템 전역 라이브러리와의 충돌을 피하기 위해 .venv라는 파이썬 가상 환경을 생성했습니다.
5. 필수 라이브러리 설치: 가상 환경 내에 torch, ultralytics, opencv-python, seaborn 등 YOLOv5 모델 구동에 필요한 모든 라이브러리를 설치했습니다.

## 파일 설명
- `main_controller.py`: 전체 시스템을 제어하는 메인 스크립트.
- `recycling_detector.py`: YOLOv5 모델을 사용하여 웹캠으로 객체를 탐지하고 결과를 반환하는 모듈.
- `Motor.py`: 서보 모터의 동작을 시뮬레이션하는 모듈.

## 최종 실행 방법
1.  터미널을 열고, 아래 명령어로 가상 환경을 활성화합니다.
    ```bash
    source .venv/bin/activate
    ```

2.  가상 환경이 활성화된 상태에서 아래 명령어로 **메인 프로그램을 실행**합니다.
    ```bash
    python3 main_controller.py
    ```

3.  프로그램이 실행되면 YOLOv5 모델이 로드되고 웹캠 영상 창이 나타납니다. 객체가 탐지되면 터미널에 모터 동작 메시지가 출력됩니다.

4.  프로그램을 종료하려면 웹캠 영상 창을 선택하고 'q' 키를 누르거나, 터미널에서 Ctrl+C를 누릅니다.
